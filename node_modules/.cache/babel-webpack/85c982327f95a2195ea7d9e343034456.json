{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"../cat.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction CatDisplayComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nclass PotentialName {\n  constructor(name) {\n    this.name = '';\n    this.votes = 0;\n    this.alreadyVoted = false;\n    return {\n      name,\n      votes: 0,\n      alreadyVoted: false\n    };\n  }\n\n}\n\nexport class CatDisplayComponent {\n  constructor(userService, catService) {\n    this.userService = userService;\n    this.catService = catService;\n    this.currentCat$ = this.catService.getCurrentCat();\n    this.user$ = this.userService.getCurrentUser();\n  }\n\n  ngOnInit() {\n    this.catService.getAnotherCat().pipe(take(1)).subscribe();\n  }\n\n  castVote(currentCat, name) {\n    const updatedNames = currentCat.names.map(nameWithVote => {\n      if (nameWithVote.name === name) {\n        return {\n          name: name,\n          votes: nameWithVote.votes + 1\n        };\n      }\n\n      return nameWithVote;\n    });\n    const updatedCat = Object.assign(Object.assign({}, currentCat), {\n      names: [...updatedNames]\n    });\n    this.userService.updateUserVotes(updatedCat.id);\n    this.catService.updateCurrentCat(updatedCat);\n  }\n\n}\n\nCatDisplayComponent.ɵfac = function CatDisplayComponent_Factory(t) {\n  return new (t || CatDisplayComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.CatService));\n};\n\nCatDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CatDisplayComponent,\n  selectors: [[\"cat-display\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [1, \"w-full\", \"flex\", \"justify-center\"]],\n  template: function CatDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CatDisplayComponent_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.currentCat$));\n    }\n  },\n  directives: [i3.NgIf],\n  pipes: [i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXQtZGlzcGxheS5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"sources":["/Users/lnewsom_1/Desktop/projects/name-that-cat/src/app/cat-display/cat-display.component.ts","/Users/lnewsom_1/Desktop/projects/name-that-cat/src/app/cat-display/cat-display.component.html"],"names":[],"mappings":"AAEA,SAAS,IAAT,QAAqB,gBAArB;;;;;;;;ACFA,IAAA,EAAA,CAAA,uBAAA,CAAA,CAAA;AACI,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAsDJ,IAAA,EAAA,CAAA,qBAAA;;;;AD/CA,MAAM,aAAN,CAAmB;AAIjB,EAAA,WAAA,CAAY,IAAZ,EAAwB;AAHxB,SAAA,IAAA,GAAe,EAAf;AACA,SAAA,KAAA,GAAgB,CAAhB;AACA,SAAA,YAAA,GAAwB,KAAxB;AAEE,WAAO;AACL,MAAA,IADK;AAEL,MAAA,KAAK,EAAE,CAFF;AAGL,MAAA,YAAY,EAAE;AAHT,KAAP;AAKD;;AAVgB;;AAkBnB,OAAM,MAAO,mBAAP,CAA0B;AAI9B,EAAA,WAAA,CACmB,WADnB,EAEmB,UAFnB,EAEyC;AADtB,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,UAAA,GAAA,UAAA;AALV,SAAA,WAAA,GAA+B,KAAK,UAAL,CAAgB,aAAhB,EAA/B;AACA,SAAA,KAAA,GAAsC,KAAK,WAAL,CAAiB,cAAjB,EAAtC;AAKL;;AAEJ,EAAA,QAAQ,GAAA;AACN,SAAK,UAAL,CAAgB,aAAhB,GAAgC,IAAhC,CACE,IAAI,CAAC,CAAD,CADN,EAEE,SAFF;AAGD;;AAED,EAAA,QAAQ,CAAC,UAAD,EAAkB,IAAlB,EAA8B;AACpC,UAAM,YAAY,GAAG,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAAsB,YAAD,IAAiB;AACzD,UAAG,YAAY,CAAC,IAAb,KAAsB,IAAzB,EAA+B;AAC7B,eAAO;AACL,UAAA,IAAI,EAAE,IADD;AAEL,UAAA,KAAK,EAAE,YAAY,CAAC,KAAb,GAAqB;AAFvB,SAAP;AAID;;AACD,aAAO,YAAP;AACD,KARoB,CAArB;AASA,UAAM,UAAU,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACX,UADW,CAAA,EACD;AACb,MAAA,KAAK,EAAE,CACL,GAAG,YADE;AADM,KADC,CAAhB;AAOA,SAAK,WAAL,CAAiB,eAAjB,CAAiC,UAAU,CAAC,EAA5C;AACA,SAAK,UAAL,CAAgB,gBAAhB,CAAiC,UAAjC;AACD;;AAlC6B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;QAAnB,mB;AAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,aAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,EAAA,MAAA,EAAA,gBAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AC1BhC,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,2CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA;;;;;AAAe,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,WAAA,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { CatService } from '../cat.service';\nimport { Cat } from '../models/cat';\nimport { User } from '../models/user';\nimport { UserService } from '../user.service';\n\nclass PotentialName {\n  name: string = '';\n  votes: number = 0;\n  alreadyVoted: boolean = false;\n  constructor(name: string) {\n    return {\n      name,\n      votes: 0,\n      alreadyVoted: false\n    }\n  }\n}\n\n@Component({\n  selector: 'cat-display',\n  templateUrl: './cat-display.component.html',\n  styleUrls: ['./cat-display.component.scss']\n})\nexport class CatDisplayComponent implements OnInit {\n  readonly currentCat$: Observable<Cat> = this.catService.getCurrentCat();\n  readonly user$: Observable<User | undefined> = this.userService.getCurrentUser();\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly catService: CatService\n  ) {}\n\n  ngOnInit() {\n    this.catService.getAnotherCat().pipe(\n      take(1)\n    ).subscribe();\n  }\n\n  castVote(currentCat: Cat, name: string) {\n    const updatedNames = currentCat.names.map((nameWithVote) => {\n      if(nameWithVote.name === name) {\n        return {\n          name: name,\n          votes: nameWithVote.votes + 1\n        }\n      }\n      return nameWithVote\n    });\n    const updatedCat: Cat = {\n      ...currentCat,\n      names: [\n        ...updatedNames,\n      ]\n    };\n\n    this.userService.updateUserVotes(updatedCat.id);\n    this.catService.updateCurrentCat(updatedCat);\n  }\n}\n","<ng-container *ngIf=\"currentCat$ | async as currentCat\">\n    <div class=\"w-full flex justify-center\">\n        <!-- <mat-card>\n            <mat-card-title class=\"text-center\">\n                You get three votes per cat.\n            </mat-card-title>\n            <div class=\"flex justify-around mr-10\">\n                <div>\n                    <div\n                        class=\"bg-green-100 m-2 p-4 absolute rounded-md font-bold drop-shadow-md\"\n                    >Cat Id: {{ currentCat.id }}</div>\n                    <img \n                        class=\"mx-auto rounded-xl\" \n                        width=\"500\" \n                        attr.src=\"{{currentCat.photoUrl}}\" \n                        alt=\"Photo of a cat\"\n                    />\n                </div>\n                <div class=\"box-border\">\n                    <ng-container *ngIf=\"currentCat.votingEnds | isVotingOpen; else noVoting\">\n                        <div class=\"m-5 w-full\" *ngIf=\"currentCat.names.length < 8\">\n                            <add-a-name-dialog [currentCat]=\"currentCat\"></add-a-name-dialog>               \n                        </div>\n                        <ng-container *ngIf=\"user$ | async as user\">\n                            <div class=\"m-5 w-full text-center\">You have {{ user.votes[currentCat.id] | remainingVotes }} votes remaining</div>\n                            <div class=\"m-5 w-full\" *ngFor=\"let name of currentCat.names\">\n                                <button \n                                    [disabled]=\"user.votes[currentCat.id] > 2\"\n                                    class=\"w-full\" \n                                    mat-raised-button \n                                    (click)=\"castVote(currentCat, name.name)\"\n                                    matBadge=\"{{ name.votes }}\" \n                                    matBadgePosition=\"after\" \n                                    matBadgeColor=\"accent\"\n                                >{{ name.name }}</button>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #noVoting>\n                        <h2 class=\"m-5 w-full text-center\">Voting has ended. This cat is named {{ currentCat.names | nameWinner}}!!</h2>\n                        <div class=\"m-5 w-full\" *ngFor=\"let name of currentCat.names\">\n                            <button \n                                class=\"w-full\" \n                                mat-raised-button\n                                disabled\n                                matBadge=\"{{ name.votes }}\" \n                                matBadgePosition=\"after\" \n                                matBadgeColor=\"accent\"\n                            >{{ name.name }}</button>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </mat-card> -->\n    </div>\n</ng-container>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}